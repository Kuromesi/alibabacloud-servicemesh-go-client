// Copyright 2025 Alibaba Cloud Service Mesh
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "istio.io/client-go/asm/pkg/clientset/typed/alibabacloudservicemesh/v1"

	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeIstioV1 struct {
	*testing.Fake
}

func (c *FakeIstioV1) ASMAdaptiveConcurrencies(namespace string) v1.ASMAdaptiveConcurrencyInterface {
	return &FakeASMAdaptiveConcurrencies{c, namespace}
}

func (c *FakeIstioV1) ASMCircuitBreakers(namespace string) v1.ASMCircuitBreakerInterface {
	return &FakeASMCircuitBreakers{c, namespace}
}

func (c *FakeIstioV1) ASMCompressors(namespace string) v1.ASMCompressorInterface {
	return &FakeASMCompressors{c, namespace}
}

func (c *FakeIstioV1) ASMCredentials(namespace string) v1.ASMCredentialInterface {
	return &FakeASMCredentials{c, namespace}
}

func (c *FakeIstioV1) ASMCustomProxyConfigInjectionTemplates(namespace string) v1.ASMCustomProxyConfigInjectionTemplateInterface {
	return &FakeASMCustomProxyConfigInjectionTemplates{c, namespace}
}

func (c *FakeIstioV1) ASMDecompressors(namespace string) v1.ASMDecompressorInterface {
	return &FakeASMDecompressors{c, namespace}
}

func (c *FakeIstioV1) ASMEgressTrafficPolicies(namespace string) v1.ASMEgressTrafficPolicyInterface {
	return &FakeASMEgressTrafficPolicies{c, namespace}
}

func (c *FakeIstioV1) ASMExtensionProviders() v1.ASMExtensionProviderInterface {
	return &FakeASMExtensionProviders{c}
}

func (c *FakeIstioV1) ASMGlobalRateLimiters(namespace string) v1.ASMGlobalRateLimiterInterface {
	return &FakeASMGlobalRateLimiters{c, namespace}
}

func (c *FakeIstioV1) ASMGrpcJsonTranscoders(namespace string) v1.ASMGrpcJsonTranscoderInterface {
	return &FakeASMGrpcJsonTranscoders{c, namespace}
}

func (c *FakeIstioV1) ASMKServeConfigs() v1.ASMKServeConfigInterface {
	return &FakeASMKServeConfigs{c}
}

func (c *FakeIstioV1) ASMKnativeConfigs() v1.ASMKnativeConfigInterface {
	return &FakeASMKnativeConfigs{c}
}

func (c *FakeIstioV1) ASMLocalRateLimiters(namespace string) v1.ASMLocalRateLimiterInterface {
	return &FakeASMLocalRateLimiters{c, namespace}
}

func (c *FakeIstioV1) ASMMigrateFromIstios() v1.ASMMigrateFromIstioInterface {
	return &FakeASMMigrateFromIstios{c}
}

func (c *FakeIstioV1) ASMPacketInspectors() v1.ASMPacketInspectorInterface {
	return &FakeASMPacketInspectors{c}
}

func (c *FakeIstioV1) ASMProxyConfigs(namespace string) v1.ASMProxyConfigInterface {
	return &FakeASMProxyConfigs{c, namespace}
}

func (c *FakeIstioV1) ASMSecurityPolicies() v1.ASMSecurityPolicyInterface {
	return &FakeASMSecurityPolicies{c}
}

func (c *FakeIstioV1) ASMSwimLanes() v1.ASMSwimLaneInterface {
	return &FakeASMSwimLanes{c}
}

func (c *FakeIstioV1) ASMSwimLaneGroups() v1.ASMSwimLaneGroupInterface {
	return &FakeASMSwimLaneGroups{c}
}

func (c *FakeIstioV1) EnvoyFilterTemplates(namespace string) v1.EnvoyFilterTemplateInterface {
	return &FakeEnvoyFilterTemplates{c, namespace}
}

func (c *FakeIstioV1) EnvoyFilterTemplateBindings(namespace string) v1.EnvoyFilterTemplateBindingInterface {
	return &FakeEnvoyFilterTemplateBindings{c, namespace}
}

func (c *FakeIstioV1) IstioGateways(namespace string) v1.IstioGatewayInterface {
	return &FakeIstioGateways{c, namespace}
}

func (c *FakeIstioV1) LLMProviders(namespace string) v1.LLMProviderInterface {
	return &FakeLLMProviders{c, namespace}
}

func (c *FakeIstioV1) LLMRoutes(namespace string) v1.LLMRouteInterface {
	return &FakeLLMRoutes{c, namespace}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeIstioV1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
